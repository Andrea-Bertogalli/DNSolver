[{"C:\\Users\\nicol\\Documents\\GitHub\\Telematica\\frontend\\src\\index.js":"1","C:\\Users\\nicol\\Documents\\GitHub\\Telematica\\frontend\\src\\contexts\\AuthContext.jsx":"2","C:\\Users\\nicol\\Documents\\GitHub\\Telematica\\frontend\\src\\App.js":"3","C:\\Users\\nicol\\Documents\\GitHub\\Telematica\\frontend\\src\\components\\PrivateRoute.jsx":"4","C:\\Users\\nicol\\Documents\\GitHub\\Telematica\\frontend\\src\\components\\Login.jsx":"5","C:\\Users\\nicol\\Documents\\GitHub\\Telematica\\frontend\\src\\components\\Dashboard.jsx":"6","C:\\Users\\nicol\\Documents\\GitHub\\Telematica\\frontend\\src\\components\\FancyCheckbox.jsx":"7","C:\\Users\\nicol\\Documents\\GitHub\\Telematica\\frontend\\src\\components\\FancyButton.jsx":"8","C:\\Users\\nicol\\Documents\\GitHub\\Telematica\\frontend\\src\\components\\FancyTable.jsx":"9","C:\\Users\\nicol\\Documents\\GitHub\\Telematica\\frontend\\src\\components\\FancyModal.jsx":"10","C:\\Users\\nicol\\Documents\\GitHub\\Telematica\\frontend\\src\\Constants.jsx":"11","C:\\Users\\nicol\\Documents\\GitHub\\Telematica\\frontend\\src\\components\\FancyBar.jsx":"12","C:\\Users\\nicol\\Documents\\GitHub\\Telematica\\frontend\\src\\components\\FancyAvatar.jsx":"13","C:\\Users\\nicol\\Documents\\GitHub\\Telematica\\frontend\\src\\components\\SignIn.jsx":"14"},{"size":302,"mtime":1655136385151,"results":"15","hashOfConfig":"16"},{"size":414,"mtime":1655136385148,"results":"17","hashOfConfig":"16"},{"size":735,"mtime":1655306890330,"results":"18","hashOfConfig":"16"},{"size":352,"mtime":1655136385148,"results":"19","hashOfConfig":"16"},{"size":6997,"mtime":1655308338414,"results":"20","hashOfConfig":"16"},{"size":9066,"mtime":1655311476730,"results":"21","hashOfConfig":"16"},{"size":471,"mtime":1655136385145,"results":"22","hashOfConfig":"16"},{"size":754,"mtime":1655136385144,"results":"23","hashOfConfig":"16"},{"size":3956,"mtime":1655136385146,"results":"24","hashOfConfig":"16"},{"size":4297,"mtime":1655306530292,"results":"25","hashOfConfig":"16"},{"size":643,"mtime":1655140713138,"results":"26","hashOfConfig":"16"},{"size":4932,"mtime":1655138494059,"results":"27","hashOfConfig":"16"},{"size":518,"mtime":1655136385142,"results":"28","hashOfConfig":"16"},{"size":8078,"mtime":1655308914730,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},"1e8jo6v",{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"33"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"33"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"33"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"33"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"33"},"C:\\Users\\nicol\\Documents\\GitHub\\Telematica\\frontend\\src\\index.js",[],[],[],"C:\\Users\\nicol\\Documents\\GitHub\\Telematica\\frontend\\src\\contexts\\AuthContext.jsx",[],[],"C:\\Users\\nicol\\Documents\\GitHub\\Telematica\\frontend\\src\\App.js",[],[],"C:\\Users\\nicol\\Documents\\GitHub\\Telematica\\frontend\\src\\components\\PrivateRoute.jsx",[],[],"C:\\Users\\nicol\\Documents\\GitHub\\Telematica\\frontend\\src\\components\\Login.jsx",["78"],[],"C:\\Users\\nicol\\Documents\\GitHub\\Telematica\\frontend\\src\\components\\Dashboard.jsx",["79","80","81","82","83","84","85","86","87"],[],"C:\\Users\\nicol\\Documents\\GitHub\\Telematica\\frontend\\src\\components\\FancyCheckbox.jsx",[],[],"C:\\Users\\nicol\\Documents\\GitHub\\Telematica\\frontend\\src\\components\\FancyButton.jsx",["88","89"],[],"import * as React from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport Button from '@mui/material/Button';\r\nimport Stack from '@mui/material/Stack';\r\nimport { purple } from '@mui/material/colors';\r\n\r\nconst ColorButton = styled(Button)(({ theme }) => ({\r\n  color: 'white',\r\n  textAlign: 'Right',\r\n  top: '-0.5px',\r\n  left: '-20px',\r\n  minWidth: '120px',\r\n  backgroundColor: '#13aa52',\r\n  borderBottomRightRadius: '24px',\r\n  borderTopRightRadius: '24px',\r\n  border: '1px solid white',\r\n  minHeight:'40px',\r\n  zIndex:'1',\r\n  '&:hover': {\r\n    backgroundColor: 'rgb(2,52,48)',\r\n  },\r\n}));\r\n\r\nexport default function FancyButton(props) {\r\n  return (\r\n    <ColorButton onClick={props.onClick} variant=\"contained\">QUERY</ColorButton>\r\n  );\r\n}\r\n","C:\\Users\\nicol\\Documents\\GitHub\\Telematica\\frontend\\src\\components\\FancyTable.jsx",["90","91"],[],"import React, { useState, useContext, useEffect } from 'react'\r\n\r\nimport PropTypes from 'prop-types';\r\nimport Box from '@mui/material/Box';\r\nimport Collapse from '@mui/material/Collapse';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Typography from '@mui/material/Typography';\r\nimport Paper from '@mui/material/Paper';\r\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\r\nimport KeyboardArrowUpIcon from '@mui/icons-material/KeyboardArrowUp';\r\n\r\nfunction createData(type, host, payload) {\r\n  return {\r\n      type: type,\r\n      host: host,\r\n      payload: payload\r\n  }\r\n}\r\n\r\nfunction Row(props) {\r\n  const { row } = props;\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <TableRow sx={{ '& > *': { borderBottom: 'unset' } }}>\r\n        <TableCell>\r\n          <IconButton\r\n            aria-label=\"expand row\"\r\n            size=\"small\"\r\n            onClick={() => setOpen(!open)}\r\n          >\r\n            {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\r\n          </IconButton>\r\n        </TableCell>\r\n        <TableCell component=\"th\" scope=\"row\">\r\n          {row.type}\r\n        </TableCell>\r\n        <TableCell align=\"right\">{row.host}</TableCell>\r\n      </TableRow>\r\n      <TableRow>\r\n        <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\r\n          <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n            <Box sx={{ margin: 1 }}>\r\n              <Typography sx={{ fontWeight: 'bold', m: 1 }} variant=\"h6\" gutterBottom component=\"div\">\r\n                Details\r\n              </Typography>\r\n              <Table size=\"small\" aria-label=\"purchases\">\r\n                <TableHead>\r\n                  <TableRow>\r\n                  {Object.keys(row.payload[0]).map((field) => (\r\n                      <TableCell><Typography sx={{ fontWeight: 'bold', m: 1 }}> {field} </Typography></TableCell>\r\n                  ))}\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {row.payload.map((row, index) => (\r\n                    <TableRow key={ index }>\r\n                      {Object.values(row).map((value) => (\r\n                        <TableCell>{ value }</TableCell>\r\n                      ))}\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </Box>\r\n          </Collapse>\r\n        </TableCell>\r\n      </TableRow>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default function FancyTable(props) {\r\n    const [rows, setRows] = useState([]);\r\n    useEffect(() => {\r\n        setRows([]);\r\n        var tmp = [];\r\n        for (const [key, value] of Object.entries(props.results)) {\r\n            tmp.push(createData(key, value[\"host\"], value[\"payload\"]));\r\n        }\r\n        setRows(tmp);\r\n    }, [props, setRows])\r\n\r\n  return (\r\n      <div style={{display: 'flex',  justifyContent:'center', alignItems:'center'}}>\r\n    <TableContainer component={Paper} style={{maxHeight: '60vh', maxWidth:'75vw', overflow: 'auto', }}>\r\n      <Table aria-label=\"collapsible table\">\r\n        <TableHead >\r\n          <TableRow >\r\n            <TableCell />\r\n            <TableCell> <Typography sx={{ fontWeight: 'bold', m: 1 }}> Type </Typography> </TableCell>\r\n            <TableCell align=\"right\"><Typography sx={{ fontWeight: 'bold', m: 1 }}> Target </Typography></TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows.map((row) => (\r\n            <Row key = {row.type + row.host} row={row} />\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\nicol\\Documents\\GitHub\\Telematica\\frontend\\src\\components\\FancyModal.jsx",["92","93","94"],[],"import React, { useState, useContext, useEffect } from 'react'\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport Modal from '@mui/material/Modal';\r\nimport axios from \"axios\";\r\nimport * as Constants from '../Constants';\r\nimport AuthContext from \"../contexts/AuthContext.jsx\";\r\nimport Divider from '@material-ui/core/Divider';\r\nimport TextField from '@mui/material/TextField';\r\nimport { createTheme, ThemeProvider, styled } from '@mui/material/styles';\r\n\r\nconst style = {\r\n  position: 'absolute',\r\n  top: '50%',\r\n  left: '50%',\r\n  transform: 'translate(-50%, -50%)',\r\n  width: 400,\r\n  bgcolor: 'background.paper',\r\n  border: '2px solid #000',\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\n\r\nconst WhiteBorderTextField = styled(TextField)`\r\n  & label.Mui-focused {\r\n    color: #13aa52;\r\n  }\r\n  & .MuiOutlinedInput-root {\r\n    &.Mui-focused fieldset {\r\n      border-color: #13aa52;\r\n    }\r\n  }\r\n`;\r\n\r\nconst FancyModal = ({handleClose, open, setOpen, setPreferences, preferences}) => {\r\n  const { auth } = useContext(AuthContext);\r\n  const [dns1, setDns1] = useState('');\r\n  const [dns2, setDns2] = useState('');\r\n  const [isFormInvalidDns1, setIsFormInvalidDns1] = useState(false);\r\n  const [isFormInvalidDns2, setIsFormInvalidDns2] = useState(false);\r\n\r\n  function checkIp(ipaddress) {\r\n      return (/^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/.test(ipaddress))\r\n  }\r\n\r\n  function handleApplyClick(){\r\n      if(!checkIp(dns1)) setIsFormInvalidDns1(true);\r\n      if(!checkIp(dns2)) setIsFormInvalidDns2(true);\r\n      if(!checkIp(dns1) || !checkIp(dns2)) return;\r\n\r\n      axios.post(Constants.BACKEND_URL + auth.username + Constants.GET_PREFERENCES, {\r\n          username: auth.username,\r\n          dns1: dns1,\r\n          dns2: dns2,\r\n      }).then(function (response) {\r\n          axios.get(Constants.BACKEND_URL + auth.username + Constants.GET_PREFERENCES).then(function (res) {\r\n            setPreferences(res.data.preferences);\r\n            setOpen(false);\r\n          });\r\n      });\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\"\r\n      >\r\n        <Box sx={style}>\r\n          <Typography id=\"modal-modal-title\" variant=\"h5\" >\r\n            Primay DNS: {preferences.primary_dns}\r\n          </Typography>\r\n          <Typography id=\"modal-modal-title\" variant=\"h5\" >\r\n            Secondary DNS: {preferences.secondary_dns}\r\n          </Typography>\r\n          <Divider style={{marginBottom:'10px', marginTop: '10px'}}/>\r\n          <WhiteBorderTextField\r\n            margin=\"normal\"\r\n            fullWidth\r\n            value = {dns1}\r\n            error = { isFormInvalidDns1 }\r\n            onChange={(e) => {setDns1(e.target.value); setIsFormInvalidDns1(false);}}\r\n            helperText={isFormInvalidDns1 && \"Invalid IP for Primary DNS!\"}\r\n            id=\"dns1\"\r\n            label=\"Primary DNS\"\r\n            name=\"dns1\"\r\n            autoFocus\r\n          />\r\n          <WhiteBorderTextField\r\n            margin=\"normal\"\r\n            fullWidth\r\n            value = {dns2}\r\n            error = { isFormInvalidDns2 }\r\n            helperText={isFormInvalidDns2 && \"Invalid IP for Secondary DNS!\"}\r\n            onChange={(e) => {setDns2(e.target.value); setIsFormInvalidDns2(false);}}\r\n            id=\"dns2\"\r\n            label=\"Secondary DNS\"\r\n            name=\"dns2\"\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            sx={{ mt: 3, mb: 2 }}\r\n            style={{backgroundColor: '#13aa52', color: 'white'}}\r\n            onClick={(e) => handleApplyClick()}\r\n          >\r\n            Apply changes\r\n          </Button>\r\n          <Typography sx={{ fontStyle: 'italic', fontSize: 12 }} style={{ color: '#222' }}>\r\n              WARNING: Some DNS are not supported by the library, if you not receive responses\r\n              set as Primary DNS 8.8.8.8, and as Secondary DNS 8.8.4.4.\r\n          </Typography>\r\n        </Box>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\nexport default FancyModal;\r\n","C:\\Users\\nicol\\Documents\\GitHub\\Telematica\\frontend\\src\\Constants.jsx",[],[],"C:\\Users\\nicol\\Documents\\GitHub\\Telematica\\frontend\\src\\components\\FancyBar.jsx",["95","96","97","98","99"],[],"import React, {  useContext } from 'react';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Box from '@mui/material/Box';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Typography from '@mui/material/Typography';\r\nimport Menu from '@mui/material/Menu';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport Container from '@mui/material/Container';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Button from '@mui/material/Button';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FancyAvatar from './FancyAvatar';\r\nimport lgImg from '../images/logo.png';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport * as Constants from '../Constants';\r\nimport AuthContext from \"../contexts/AuthContext.jsx\";\r\n\r\nconst pages = [];\r\nconst settings = ['Settings', 'Clear history', 'Logout'];\r\n\r\nconst FancyBar = ({updateHistory, handleOpen}) => {\r\n  const [anchorElNav, setAnchorElNav] = React.useState(null);\r\n  const [anchorElUser, setAnchorElUser] = React.useState(null);\r\n  const navigate = useNavigate();\r\n  const { auth } = useContext(AuthContext);\r\n\r\n  const handleOpenNavMenu = (event) => {\r\n    setAnchorElNav(event.currentTarget);\r\n  };\r\n  const handleOpenUserMenu = (event) => {\r\n    setAnchorElUser(event.currentTarget);\r\n  };\r\n\r\n  const handleCloseNavMenu = () => {\r\n    setAnchorElNav(null);\r\n  };\r\n\r\n  const handleCloseUserMenu = (page) => {\r\n    if(page === \"Logout\"){\r\n        localStorage.clear();\r\n        navigate(\"/login\");\r\n    }else if(page === \"Clear history\"){\r\n        axios.get(Constants.BACKEND_URL + auth.username + Constants.CLEAR_HISTORY);\r\n        updateHistory();\r\n    }\r\n    else if(page === \"Settings\") {\r\n        handleOpen();\r\n    }\r\n    setAnchorElUser(null);\r\n  };\r\n\r\n  return (\r\n    <AppBar style={{backgroundColor: 'rgb(255,255,255)'}} position=\"static\">\r\n      <Container maxWidth=\"xl\">\r\n        <Toolbar disableGutters>\r\n          <Typography\r\n            variant=\"h6\"\r\n            noWrap\r\n            component=\"div\"\r\n            sx={{ mr: 2, display: { xs: 'none', md: 'flex' } }}\r\n          >\r\n            <img style={{ width: '30%'}} src={lgImg} />\r\n          </Typography>\r\n\r\n          <Box sx={{ flexGrow: 1, display: { xs: 'flex', md: 'none' } }}>\r\n\r\n            <Menu\r\n              id=\"menu-appbar\"\r\n              anchorEl={anchorElNav}\r\n              anchorOrigin={{\r\n                vertical: 'bottom',\r\n                horizontal: 'left',\r\n              }}\r\n              keepMounted\r\n              transformOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'left',\r\n              }}\r\n              open={Boolean(anchorElNav)}\r\n              onClose={handleCloseNavMenu}\r\n              sx={{\r\n                display: { xs: 'block', md: 'none' },\r\n              }}\r\n            >\r\n              {pages.map((page) => (\r\n                <MenuItem key={page} onClick={handleCloseNavMenu}>\r\n                  <Typography textAlign=\"center\">{page}</Typography>\r\n                </MenuItem>\r\n              ))}\r\n            </Menu>\r\n          </Box>\r\n          <Typography\r\n            variant=\"h6\"\r\n            noWrap\r\n            component=\"div\"\r\n            sx={{ flexGrow: 1, display: { xs: 'flex', md: 'none' } }}\r\n          >\r\n            <img style={{ width: '10%'}} src={lgImg} />\r\n          </Typography>\r\n          <Box sx={{ flexGrow: 1, display: { xs: 'none', md: 'flex' } }}>\r\n            {pages.map((page) => (\r\n              <Button\r\n                key={page}\r\n                onClick={handleCloseNavMenu}\r\n                sx={{ my: 2, color: 'white', display: 'block' }}\r\n              >\r\n                {page}\r\n              </Button>\r\n            ))}\r\n          </Box>\r\n\r\n          <Box sx={{ flexGrow: 0 }}>\r\n            <Tooltip title=\"Open settings\">\r\n              <IconButton onClick={handleOpenUserMenu} sx={{ p: 0 }}>\r\n                <FancyAvatar />\r\n              </IconButton>\r\n            </Tooltip>\r\n            <Menu\r\n              sx={{ mt: '45px' }}\r\n              id=\"menu-appbar\"\r\n              anchorEl={anchorElUser}\r\n              anchorOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'right',\r\n              }}\r\n              keepMounted\r\n              transformOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'right',\r\n              }}\r\n              open={Boolean(anchorElUser)}\r\n              onClose={handleCloseUserMenu}\r\n            >\r\n              {settings.map((setting) => (\r\n                <MenuItem key={setting} onClick={() => handleCloseUserMenu(setting)}>\r\n                  <Typography textAlign=\"center\">{setting}</Typography>\r\n                </MenuItem>\r\n              ))}\r\n            </Menu>\r\n          </Box>\r\n        </Toolbar>\r\n      </Container>\r\n    </AppBar>\r\n  );\r\n};\r\nexport default FancyBar;\r\n","C:\\Users\\nicol\\Documents\\GitHub\\Telematica\\frontend\\src\\components\\FancyAvatar.jsx",[],[],"C:\\Users\\nicol\\Documents\\GitHub\\Telematica\\frontend\\src\\components\\SignIn.jsx",["100","101","102","103","104","105"],[],"import React, { useRef, useEffect, useState, useContext } from 'react';\r\nimport axios from 'axios';\r\nimport AuthContext from \"../contexts/AuthContext.jsx\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Button from '@mui/material/Button';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport TextField from '@mui/material/TextField';\r\nimport Link from '@mui/material/Link';\r\nimport { Link as lk} from 'react-router-dom'\r\nimport Paper from '@mui/material/Paper';\r\nimport Box from '@mui/material/Box';\r\nimport Grid from '@mui/material/Grid';\r\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\r\nimport Typography from '@mui/material/Typography';\r\nimport { createTheme, ThemeProvider, styled } from '@mui/material/styles';\r\nimport bgImg from '../images/background.png'\r\nimport * as Constants from '../Constants';\r\nimport { sha3_512 } from 'js-sha3';\r\nimport FancyCheckbox from './FancyCheckbox.jsx';\r\n\r\nconst WhiteBorderTextField = styled(TextField)`\r\n  & label.Mui-focused {\r\n    color: white;\r\n  }\r\n  & .MuiOutlinedInput-root {\r\n    &.Mui-focused fieldset {\r\n      border-color: white;\r\n    }\r\n  }\r\n`;\r\n\r\nconst SignIn = () => {\r\n    const { setAuth } = useContext(AuthContext);\r\n    const userRef = useRef();\r\n    const [user, setUser] = useState('')\r\n    const [pwd, setPwd] = useState('');\r\n    const [name, setName] = useState('');\r\n    const [surname, setSurname] = useState('');\r\n    const [rPwd, setRpwd] = useState('');\r\n    const navigate = useNavigate();\r\n    const [isFormInvalid, setIsFormInvalid] = useState(false);\r\n\r\n    useEffect(() => {\r\n        var prevAuth = JSON.parse(localStorage.getItem('auth'));\r\n        if(prevAuth && prevAuth.success) {\r\n            setAuth(prevAuth);\r\n            navigate('/dashboard');\r\n        }\r\n\r\n        document.title = \"DNSolver - Login\"\r\n        userRef.current.focus();\r\n    }, [])\r\n\r\n    const handleSubmit = (e) => {\r\n      e.preventDefault();\r\n\r\n      let hash1 = sha3_512(pwd);\r\n      let hash2 = sha3_512(rPwd);\r\n\r\n      if (hash1 !== hash2 || (pwd.length == 0 || name.length == 0 || user.length == 0 || surname.length == 0)) {\r\n        setIsFormInvalid(true);\r\n        return;\r\n      }\r\n\r\n      axios.post(Constants.BACKEND_URL + 'register', {\r\n          name: name,\r\n          password: hash1,\r\n          surname: surname,\r\n          username: user\r\n      })\r\n      .then(function (response) {\r\n          navigate('/login');\r\n      })\r\n      .catch(function (error) {\r\n          if (!error?.response) {\r\n              alert('Connection timeout!');\r\n              console.log('Server timeout!');\r\n          } else if (error.response?.status === 404) {\r\n              setIsFormInvalid(true);\r\n              console.log('Wrong username or password!');\r\n          } else if (error.response?.status === 500) {\r\n              alert('Server error!');\r\n              console.log('Server error!');\r\n          } else {\r\n              console.log('Unknown cause (signin failed)!');\r\n          }\r\n      });\r\n    }\r\n\r\n    function Copyright(props) {\r\n      return (\r\n        <Typography variant = \"body2\" color = \"text.secondary\" align = \"center\" {...props}>\r\n          {'Copyright © '}\r\n          <Link color=\"inherit\" href = { \"./\" }>\r\n            DNSolver\r\n          </Link>{' '}\r\n          {new Date().getFullYear()}\r\n          {'.'}\r\n        </Typography>\r\n      );\r\n    }\r\n\r\n    const theme = createTheme({\r\n      palette: {\r\n        mode: 'dark',\r\n      },\r\n    });\r\n\r\n    return (\r\n      <ThemeProvider theme={theme}>\r\n        <Grid container component=\"main\" sx={{ height: '100vh' }}>\r\n          <CssBaseline />\r\n          <Grid\r\n            item\r\n            xs={false}\r\n            sm={4}\r\n            md={7}\r\n            sx={{\r\n              backgroundImage: 'url(' + bgImg +')',\r\n              backgroundRepeat: 'no-repeat',\r\n              backgroundSize: 'cover',\r\n              backgroundPosition: 'center',\r\n            }}\r\n          />\r\n          <Grid style = {{backgroundColor: 'rgb(2,52,48)'}} item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n            <Box\r\n              sx={{\r\n                my: 8,\r\n                mx: 4,\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                alignItems: 'center',\r\n              }}\r\n            >\r\n              <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\r\n                <LockOutlinedIcon />\r\n              </Avatar>\r\n              <Typography component=\"h1\" variant=\"h5\">\r\n                Sign in\r\n              </Typography>\r\n              <Box component=\"form\" noValidate onSubmit={handleSubmit} sx={{ mt: 1 }}>\r\n                <WhiteBorderTextField\r\n                  margin=\"normal\"\r\n                  required\r\n                  fullWidth\r\n                  ref = {userRef}\r\n                  value = {user}\r\n                  onChange={(e) => setUser(e.target.value)}\r\n                  error = { isFormInvalid }\r\n                  id=\"username\"\r\n                  label=\"Username\"\r\n                  name=\"username\"\r\n                  autoComplete=\"username\"\r\n                  autoFocus\r\n                  style={{color: 'white'}}\r\n                />\r\n                <WhiteBorderTextField\r\n                  margin=\"normal\"\r\n                  required\r\n                  fullWidth\r\n                  value = {name}\r\n                  onChange={(e) => setName(e.target.value)}\r\n                  error = { isFormInvalid }\r\n                  name=\"name\"\r\n                  label=\"Name\"\r\n                  type=\"text\"\r\n                  id=\"name\"\r\n                  style={{ color: 'white'}}\r\n                />\r\n                <WhiteBorderTextField\r\n                  margin=\"normal\"\r\n                  required\r\n                  fullWidth\r\n                  value = {surname}\r\n                  onChange={(e) => setSurname(e.target.value)}\r\n                  error = { isFormInvalid }\r\n                  name=\"surname\"\r\n                  label=\"Surname\"\r\n                  type=\"text\"\r\n                  id=\"surname\"\r\n                  style={{ color: 'white'}}\r\n                />\r\n                <WhiteBorderTextField\r\n                  margin=\"normal\"\r\n                  required\r\n                  fullWidth\r\n                  value = {pwd}\r\n                  onChange={(e) => setPwd(e.target.value)}\r\n                  error = { isFormInvalid }\r\n                  name=\"password\"\r\n                  label=\"Password\"\r\n                  type=\"password\"\r\n                  id=\"password\"\r\n                  autoComplete=\"current-password\"\r\n                  style={{ color: 'white'}}\r\n                />\r\n                <WhiteBorderTextField\r\n                  margin=\"normal\"\r\n                  required\r\n                  fullWidth\r\n                  value = {rPwd}\r\n                  onChange={(e) => setRpwd(e.target.value)}\r\n                  error = { isFormInvalid }\r\n                  name=\"rPassword\"\r\n                  label=\"Repeat Password\"\r\n                  type=\"password\"\r\n                  id=\"rPassword\"\r\n                  helperText={isFormInvalid && \"Username already exists or mismatched password\"}\r\n                  autoComplete=\"current-password\"\r\n                  style={{ color: 'white'}}\r\n                />\r\n                <Button\r\n                  type=\"submit\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  sx={{ mt: 3, mb: 2 }}\r\n                  style={{backgroundColor: '#13aa52', color: 'white'}}\r\n                >\r\n                  Sign In\r\n                </Button>\r\n                <Grid container>\r\n                  <Grid item>\r\n                    <Link component={lk} to=\"/login\" variant=\"body2\">\r\n                      {\"Do you have an account? Log-in\"}\r\n                    </Link>\r\n                  </Grid>\r\n                </Grid>\r\n                <Copyright sx={{ mt: 5 }} />\r\n              </Box>\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n      </ThemeProvider>\r\n    );\r\n  }\r\n\r\nexport default SignIn;\r\n",{"ruleId":"106","severity":1,"message":"107","line":51,"column":8,"nodeType":"108","endLine":51,"endColumn":10,"suggestions":"109"},{"ruleId":"110","severity":1,"message":"111","line":59,"column":11,"nodeType":"112","messageId":"113","endLine":59,"endColumn":24},{"ruleId":"110","severity":1,"message":"114","line":64,"column":26,"nodeType":"112","messageId":"113","endLine":64,"endColumn":31},{"ruleId":"110","severity":1,"message":"115","line":70,"column":11,"nodeType":"112","messageId":"113","endLine":70,"endColumn":24},{"ruleId":"116","severity":1,"message":"117","line":92,"column":65,"nodeType":"118","messageId":"119","endLine":94,"endColumn":14},{"ruleId":"120","severity":1,"message":"121","line":95,"column":21,"nodeType":"122","messageId":"123","endLine":95,"endColumn":23},{"ruleId":"124","severity":1,"message":"125","line":128,"column":20,"nodeType":"126","messageId":"127","endLine":128,"endColumn":32},{"ruleId":"110","severity":1,"message":"128","line":130,"column":13,"nodeType":"112","messageId":"113","endLine":130,"endColumn":20},{"ruleId":"110","severity":1,"message":"129","line":131,"column":13,"nodeType":"112","messageId":"113","endLine":131,"endColumn":22},{"ruleId":"130","severity":1,"message":"131","line":131,"column":25,"nodeType":"126","messageId":"127","endLine":131,"endColumn":36},{"ruleId":"110","severity":1,"message":"132","line":4,"column":8,"nodeType":"112","messageId":"113","endLine":4,"endColumn":13},{"ruleId":"110","severity":1,"message":"133","line":5,"column":10,"nodeType":"112","messageId":"113","endLine":5,"endColumn":16},{"ruleId":"110","severity":1,"message":"134","line":1,"column":27,"nodeType":"112","messageId":"113","endLine":1,"endColumn":37},{"ruleId":"110","severity":1,"message":"135","line":3,"column":8,"nodeType":"112","messageId":"113","endLine":3,"endColumn":17},{"ruleId":"110","severity":1,"message":"136","line":1,"column":39,"nodeType":"112","messageId":"113","endLine":1,"endColumn":48},{"ruleId":"110","severity":1,"message":"137","line":11,"column":10,"nodeType":"112","messageId":"113","endLine":11,"endColumn":21},{"ruleId":"110","severity":1,"message":"138","line":11,"column":23,"nodeType":"112","messageId":"113","endLine":11,"endColumn":36},{"ruleId":"110","severity":1,"message":"139","line":8,"column":8,"nodeType":"112","messageId":"113","endLine":8,"endColumn":16},{"ruleId":"110","severity":1,"message":"140","line":10,"column":8,"nodeType":"112","messageId":"113","endLine":10,"endColumn":14},{"ruleId":"110","severity":1,"message":"141","line":30,"column":9,"nodeType":"112","messageId":"113","endLine":30,"endColumn":26},{"ruleId":"142","severity":1,"message":"143","line":65,"column":13,"nodeType":"144","endLine":65,"endColumn":56},{"ruleId":"142","severity":1,"message":"143","line":101,"column":13,"nodeType":"144","endLine":101,"endColumn":56},{"ruleId":"110","severity":1,"message":"145","line":20,"column":8,"nodeType":"112","messageId":"113","endLine":20,"endColumn":21},{"ruleId":"106","severity":1,"message":"107","line":53,"column":8,"nodeType":"108","endLine":53,"endColumn":10,"suggestions":"146"},{"ruleId":"120","severity":1,"message":"121","line":61,"column":42,"nodeType":"122","messageId":"123","endLine":61,"endColumn":44},{"ruleId":"120","severity":1,"message":"121","line":61,"column":62,"nodeType":"122","messageId":"123","endLine":61,"endColumn":64},{"ruleId":"120","severity":1,"message":"121","line":61,"column":82,"nodeType":"122","messageId":"123","endLine":61,"endColumn":84},{"ruleId":"120","severity":1,"message":"121","line":61,"column":105,"nodeType":"122","messageId":"123","endLine":61,"endColumn":107},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'navigate' and 'setAuth'. Either include them or remove the dependency array.","ArrayExpression",["147"],"no-unused-vars","'handleOnHover' is assigned a value but never used.","Identifier","unusedVar","'value' is assigned a value but never used.","'handleOnFocus' is assigned a value but never used.","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'errors'.","FunctionExpression","unsafeRefs","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-new-object","The object literal notation {} is preferrable.","NewExpression","preferLiteral","'history' is assigned a value but never used.","'tempItems' is assigned a value but never used.","no-array-constructor","The array literal notation [] is preferable.","'Stack' is defined but never used.","'purple' is defined but never used.","'useContext' is defined but never used.","'PropTypes' is defined but never used.","'useEffect' is defined but never used.","'createTheme' is defined but never used.","'ThemeProvider' is defined but never used.","'MenuIcon' is defined but never used.","'Avatar' is defined but never used.","'handleOpenNavMenu' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'FancyCheckbox' is defined but never used.",["148"],{"desc":"149","fix":"150"},{"desc":"149","fix":"151"},"Update the dependencies array to be: [navigate, setAuth]",{"range":"152","text":"153"},{"range":"154","text":"153"},[1824,1826],"[navigate, setAuth]",[1908,1910]]