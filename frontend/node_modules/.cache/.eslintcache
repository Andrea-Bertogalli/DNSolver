[{"D:\\unipr\\Telematica\\Progetto\\Telematica\\frontend\\src\\index.js":"1","D:\\unipr\\Telematica\\Progetto\\Telematica\\frontend\\src\\App.js":"2","D:\\unipr\\Telematica\\Progetto\\Telematica\\frontend\\src\\contexts\\AuthContext.jsx":"3","D:\\unipr\\Telematica\\Progetto\\Telematica\\frontend\\src\\components\\PrivateRoute.jsx":"4","D:\\unipr\\Telematica\\Progetto\\Telematica\\frontend\\src\\components\\Login.jsx":"5","D:\\unipr\\Telematica\\Progetto\\Telematica\\frontend\\src\\components\\Dashboard.jsx":"6","D:\\unipr\\Telematica\\Progetto\\Telematica\\frontend\\src\\components\\FancyCheckbox.jsx":"7","D:\\unipr\\Telematica\\Progetto\\Telematica\\frontend\\src\\components\\FancyButton.jsx":"8","D:\\unipr\\Telematica\\Progetto\\Telematica\\frontend\\src\\Constants.jsx":"9","D:\\unipr\\Telematica\\Progetto\\Telematica\\frontend\\src\\components\\FancyBar.jsx":"10","D:\\unipr\\Telematica\\Progetto\\Telematica\\frontend\\src\\components\\FancyAvatar.jsx":"11","D:\\unipr\\Telematica\\Progetto\\Telematica\\frontend\\src\\components\\FancyTable.jsx":"12"},{"size":291,"mtime":1651071639877,"results":"13","hashOfConfig":"14"},{"size":598,"mtime":1651238368414,"results":"15","hashOfConfig":"14"},{"size":414,"mtime":1651233202347,"results":"16","hashOfConfig":"14"},{"size":352,"mtime":1651233228437,"results":"17","hashOfConfig":"14"},{"size":7184,"mtime":1651823418755,"results":"18","hashOfConfig":"14"},{"size":7842,"mtime":1651834094988,"results":"19","hashOfConfig":"14"},{"size":471,"mtime":1651590729905,"results":"20","hashOfConfig":"14"},{"size":632,"mtime":1651673645954,"results":"21","hashOfConfig":"14"},{"size":501,"mtime":1651673645898,"results":"22","hashOfConfig":"14"},{"size":4484,"mtime":1651823419969,"results":"23","hashOfConfig":"14"},{"size":518,"mtime":1651248519766,"results":"24","hashOfConfig":"14"},{"size":4429,"mtime":1651835001407,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"del8ih",{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},"D:\\unipr\\Telematica\\Progetto\\Telematica\\frontend\\src\\index.js",[],[],"D:\\unipr\\Telematica\\Progetto\\Telematica\\frontend\\src\\App.js",[],[],"D:\\unipr\\Telematica\\Progetto\\Telematica\\frontend\\src\\contexts\\AuthContext.jsx",[],[],"D:\\unipr\\Telematica\\Progetto\\Telematica\\frontend\\src\\components\\PrivateRoute.jsx",[],[],"D:\\unipr\\Telematica\\Progetto\\Telematica\\frontend\\src\\components\\Login.jsx",["63"],[],"D:\\unipr\\Telematica\\Progetto\\Telematica\\frontend\\src\\components\\Dashboard.jsx",["64","65","66","67","68","69","70"],[],"D:\\unipr\\Telematica\\Progetto\\Telematica\\frontend\\src\\components\\FancyCheckbox.jsx",[],[],"D:\\unipr\\Telematica\\Progetto\\Telematica\\frontend\\src\\components\\FancyButton.jsx",["71","72"],[],"D:\\unipr\\Telematica\\Progetto\\Telematica\\frontend\\src\\Constants.jsx",[],[],"D:\\unipr\\Telematica\\Progetto\\Telematica\\frontend\\src\\components\\FancyBar.jsx",["73","74","75","76","77"],[],"D:\\unipr\\Telematica\\Progetto\\Telematica\\frontend\\src\\components\\FancyAvatar.jsx",[],[],"D:\\unipr\\Telematica\\Progetto\\Telematica\\frontend\\src\\components\\FancyTable.jsx",["78"],[],"import React, { useState, useContext, useEffect } from 'react'\r\n\r\nimport PropTypes from 'prop-types';\r\nimport Box from '@mui/material/Box';\r\nimport Collapse from '@mui/material/Collapse';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Typography from '@mui/material/Typography';\r\nimport Paper from '@mui/material/Paper';\r\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\r\nimport KeyboardArrowUpIcon from '@mui/icons-material/KeyboardArrowUp';\r\n\r\nfunction createData(type, host, payload) {\r\n  return {\r\n      type: type,\r\n      host: host,\r\n      payload: payload\r\n  }\r\n}\r\n\r\nfunction Row(props) {\r\n  const { row } = props;\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <TableRow sx={{ '& > *': { borderBottom: 'unset' } }}>\r\n        <TableCell>\r\n          <IconButton\r\n            aria-label=\"expand row\"\r\n            size=\"small\"\r\n            onClick={() => setOpen(!open)}\r\n          >\r\n            {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\r\n          </IconButton>\r\n        </TableCell>\r\n        <TableCell component=\"th\" scope=\"row\">\r\n          {row.type}\r\n        </TableCell>\r\n        <TableCell align=\"right\">{row.host}</TableCell>\r\n      </TableRow>\r\n      <TableRow>\r\n        <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\r\n          <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n            <Box sx={{ margin: 1 }}>\r\n              <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                Details\r\n              </Typography>\r\n              <Table size=\"small\" aria-label=\"purchases\">\r\n                <TableHead>\r\n                  <TableRow>\r\n                  {Object.keys(row.payload[0]).map((field) => (\r\n                      <TableCell>{field}</TableCell>\r\n                  ))}\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {[].map((historyRow) => (\r\n                    <TableRow key={historyRow.date}>\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        {historyRow.date}\r\n                      </TableCell>\r\n                      <TableCell>{historyRow.customerId}</TableCell>\r\n                      <TableCell align=\"right\">{historyRow.amount}</TableCell>\r\n                      <TableCell align=\"right\">\r\n                        {Math.round(historyRow.amount * row.price * 100) / 100}\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </Box>\r\n          </Collapse>\r\n        </TableCell>\r\n      </TableRow>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nRow.propTypes = {\r\n  row: PropTypes.shape({\r\n    calories: PropTypes.number.isRequired,\r\n    carbs: PropTypes.number.isRequired,\r\n    fat: PropTypes.number.isRequired,\r\n    history: PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n        amount: PropTypes.number.isRequired,\r\n        customerId: PropTypes.string.isRequired,\r\n        date: PropTypes.string.isRequired,\r\n      }),\r\n    ).isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    price: PropTypes.number.isRequired,\r\n    protein: PropTypes.number.isRequired,\r\n  }).isRequired,\r\n};\r\n\r\nexport default function FancyTable(props) {\r\n    const [rows, setRows] = useState([]);\r\n    useEffect(() => {\r\n        setRows([]);\r\n        var tmp = [];\r\n        for (const [key, value] of Object.entries(props.results)) {\r\n            tmp.push(createData(key, value[\"host\"], value[\"payload\"]));\r\n        }\r\n        setRows(tmp);\r\n    }, [props, setRows])\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table aria-label=\"collapsible table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell />\r\n            <TableCell>Type</TableCell>\r\n            <TableCell align=\"right\">Request</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows.map((row) => (\r\n            <Row key = {row.type + row.host} row={row} />\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n",{"ruleId":"79","severity":1,"message":"80","line":50,"column":8,"nodeType":"81","endLine":50,"endColumn":10,"suggestions":"82"},{"ruleId":"83","severity":1,"message":"84","line":50,"column":11,"nodeType":"85","messageId":"86","endLine":50,"endColumn":24},{"ruleId":"83","severity":1,"message":"87","line":55,"column":26,"nodeType":"85","messageId":"86","endLine":55,"endColumn":31},{"ruleId":"83","severity":1,"message":"88","line":61,"column":11,"nodeType":"85","messageId":"86","endLine":61,"endColumn":24},{"ruleId":"89","severity":1,"message":"90","line":106,"column":20,"nodeType":"91","messageId":"92","endLine":106,"endColumn":32},{"ruleId":"83","severity":1,"message":"93","line":108,"column":13,"nodeType":"85","messageId":"86","endLine":108,"endColumn":20},{"ruleId":"83","severity":1,"message":"94","line":109,"column":13,"nodeType":"85","messageId":"86","endLine":109,"endColumn":22},{"ruleId":"95","severity":1,"message":"96","line":109,"column":25,"nodeType":"91","messageId":"92","endLine":109,"endColumn":36},{"ruleId":"83","severity":1,"message":"97","line":4,"column":8,"nodeType":"85","messageId":"86","endLine":4,"endColumn":13},{"ruleId":"83","severity":1,"message":"98","line":5,"column":10,"nodeType":"85","messageId":"86","endLine":5,"endColumn":16},{"ruleId":"83","severity":1,"message":"99","line":8,"column":8,"nodeType":"85","messageId":"86","endLine":8,"endColumn":16},{"ruleId":"83","severity":1,"message":"100","line":10,"column":8,"nodeType":"85","messageId":"86","endLine":10,"endColumn":14},{"ruleId":"83","severity":1,"message":"101","line":26,"column":9,"nodeType":"85","messageId":"86","endLine":26,"endColumn":26},{"ruleId":"102","severity":1,"message":"103","line":55,"column":13,"nodeType":"104","endLine":55,"endColumn":56},{"ruleId":"102","severity":1,"message":"103","line":91,"column":13,"nodeType":"104","endLine":91,"endColumn":56},{"ruleId":"83","severity":1,"message":"105","line":1,"column":27,"nodeType":"85","messageId":"86","endLine":1,"endColumn":37},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'navigate' and 'setAuth'. Either include them or remove the dependency array.","ArrayExpression",["106"],"no-unused-vars","'handleOnHover' is assigned a value but never used.","Identifier","unusedVar","'value' is assigned a value but never used.","'handleOnFocus' is assigned a value but never used.","no-new-object","The object literal notation {} is preferrable.","NewExpression","preferLiteral","'history' is assigned a value but never used.","'tempItems' is assigned a value but never used.","no-array-constructor","The array literal notation [] is preferable.","'Stack' is defined but never used.","'purple' is defined but never used.","'MenuIcon' is defined but never used.","'Avatar' is defined but never used.","'handleOpenNavMenu' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useContext' is defined but never used.",{"desc":"107","fix":"108"},"Update the dependencies array to be: [navigate, setAuth]",{"range":"109","text":"110"},[1787,1789],"[navigate, setAuth]"]