[{"D:\\unipr\\Telematica\\Progetto\\Telematica\\frontend\\src\\index.js":"1","D:\\unipr\\Telematica\\Progetto\\Telematica\\frontend\\src\\App.js":"2","D:\\unipr\\Telematica\\Progetto\\Telematica\\frontend\\src\\components\\PrivateRoute.jsx":"3","D:\\unipr\\Telematica\\Progetto\\Telematica\\frontend\\src\\components\\Login.jsx":"4","D:\\unipr\\Telematica\\Progetto\\Telematica\\frontend\\src\\components\\Dashboard.jsx":"5","D:\\unipr\\Telematica\\Progetto\\Telematica\\frontend\\src\\contexts\\AuthContext.jsx":"6","D:\\unipr\\Telematica\\Progetto\\Telematica\\frontend\\src\\Constants.jsx":"7","D:\\unipr\\Telematica\\Progetto\\Telematica\\frontend\\src\\components\\FancyAvatar.jsx":"8","D:\\unipr\\Telematica\\Progetto\\Telematica\\frontend\\src\\components\\FancyBar.jsx":"9","D:\\unipr\\Telematica\\Progetto\\Telematica\\frontend\\src\\components\\FancyCheckbox.jsx":"10","D:\\unipr\\Telematica\\Progetto\\Telematica\\frontend\\src\\components\\FancyButton.jsx":"11"},{"size":291,"mtime":1651071639877,"results":"12","hashOfConfig":"13"},{"size":598,"mtime":1651238368414,"results":"14","hashOfConfig":"13"},{"size":352,"mtime":1651233228437,"results":"15","hashOfConfig":"13"},{"size":6322,"mtime":1651474777596,"results":"16","hashOfConfig":"13"},{"size":3744,"mtime":1651488906551,"results":"17","hashOfConfig":"13"},{"size":414,"mtime":1651233202347,"results":"18","hashOfConfig":"13"},{"size":54,"mtime":1651245564084,"results":"19","hashOfConfig":"13"},{"size":518,"mtime":1651248519766,"results":"20","hashOfConfig":"13"},{"size":4286,"mtime":1651248436282,"results":"21","hashOfConfig":"13"},{"size":444,"mtime":1651483110186,"results":"22","hashOfConfig":"13"},{"size":603,"mtime":1651486261392,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"del8ih",{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"27"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\unipr\\Telematica\\Progetto\\Telematica\\frontend\\src\\index.js",[],[],[],"D:\\unipr\\Telematica\\Progetto\\Telematica\\frontend\\src\\App.js",[],[],"D:\\unipr\\Telematica\\Progetto\\Telematica\\frontend\\src\\components\\PrivateRoute.jsx",[],[],"D:\\unipr\\Telematica\\Progetto\\Telematica\\frontend\\src\\components\\Login.jsx",[],[],"D:\\unipr\\Telematica\\Progetto\\Telematica\\frontend\\src\\components\\Dashboard.jsx",["59","60"],[],"D:\\unipr\\Telematica\\Progetto\\Telematica\\frontend\\src\\contexts\\AuthContext.jsx",[],[],"D:\\unipr\\Telematica\\Progetto\\Telematica\\frontend\\src\\Constants.jsx",[],[],"D:\\unipr\\Telematica\\Progetto\\Telematica\\frontend\\src\\components\\FancyAvatar.jsx",[],[],"D:\\unipr\\Telematica\\Progetto\\Telematica\\frontend\\src\\components\\FancyBar.jsx",["61","62","63","64","65"],[],"import * as React from 'react';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Box from '@mui/material/Box';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Typography from '@mui/material/Typography';\r\nimport Menu from '@mui/material/Menu';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport Container from '@mui/material/Container';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Button from '@mui/material/Button';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FancyAvatar from './FancyAvatar';\r\nimport lgImg from '../images/logo.png';\r\n\r\nconst pages = [];\r\nconst settings = ['Profile', 'Logout'];\r\n\r\nconst FancyBar = () => {\r\n  const [anchorElNav, setAnchorElNav] = React.useState(null);\r\n  const [anchorElUser, setAnchorElUser] = React.useState(null);\r\n\r\n  const handleOpenNavMenu = (event) => {\r\n    setAnchorElNav(event.currentTarget);\r\n  };\r\n  const handleOpenUserMenu = (event) => {\r\n    setAnchorElUser(event.currentTarget);\r\n  };\r\n\r\n  const handleCloseNavMenu = () => {\r\n    setAnchorElNav(null);\r\n  };\r\n\r\n  const handleCloseUserMenu = () => {\r\n    setAnchorElUser(null);\r\n  };\r\n\r\n  return (\r\n    <AppBar style={{backgroundColor: 'rgb(255,255,255)'}} position=\"static\">\r\n      <Container maxWidth=\"xl\">\r\n        <Toolbar disableGutters>\r\n          <Typography\r\n            variant=\"h6\"\r\n            noWrap\r\n            component=\"div\"\r\n            sx={{ mr: 2, display: { xs: 'none', md: 'flex' } }}\r\n          >\r\n            <img style={{ width: '30%'}} src={lgImg} />\r\n          </Typography>\r\n\r\n          <Box sx={{ flexGrow: 1, display: { xs: 'flex', md: 'none' } }}>\r\n\r\n            <Menu\r\n              id=\"menu-appbar\"\r\n              anchorEl={anchorElNav}\r\n              anchorOrigin={{\r\n                vertical: 'bottom',\r\n                horizontal: 'left',\r\n              }}\r\n              keepMounted\r\n              transformOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'left',\r\n              }}\r\n              open={Boolean(anchorElNav)}\r\n              onClose={handleCloseNavMenu}\r\n              sx={{\r\n                display: { xs: 'block', md: 'none' },\r\n              }}\r\n            >\r\n              {pages.map((page) => (\r\n                <MenuItem key={page} onClick={handleCloseNavMenu}>\r\n                  <Typography textAlign=\"center\">{page}</Typography>\r\n                </MenuItem>\r\n              ))}\r\n            </Menu>\r\n          </Box>\r\n          <Typography\r\n            variant=\"h6\"\r\n            noWrap\r\n            component=\"div\"\r\n            sx={{ flexGrow: 1, display: { xs: 'flex', md: 'none' } }}\r\n          >\r\n            <img style={{ width: '10%'}} src={lgImg} />\r\n          </Typography>\r\n          <Box sx={{ flexGrow: 1, display: { xs: 'none', md: 'flex' } }}>\r\n            {pages.map((page) => (\r\n              <Button\r\n                key={page}\r\n                onClick={handleCloseNavMenu}\r\n                sx={{ my: 2, color: 'white', display: 'block' }}\r\n              >\r\n                {page}\r\n              </Button>\r\n            ))}\r\n          </Box>\r\n\r\n          <Box sx={{ flexGrow: 0 }}>\r\n            <Tooltip title=\"Open settings\">\r\n              <IconButton onClick={handleOpenUserMenu} sx={{ p: 0 }}>\r\n                <FancyAvatar />\r\n              </IconButton>\r\n            </Tooltip>\r\n            <Menu\r\n              sx={{ mt: '45px' }}\r\n              id=\"menu-appbar\"\r\n              anchorEl={anchorElUser}\r\n              anchorOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'right',\r\n              }}\r\n              keepMounted\r\n              transformOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'right',\r\n              }}\r\n              open={Boolean(anchorElUser)}\r\n              onClose={handleCloseUserMenu}\r\n            >\r\n              {settings.map((setting) => (\r\n                <MenuItem key={setting} onClick={handleCloseUserMenu}>\r\n                  <Typography textAlign=\"center\">{setting}</Typography>\r\n                </MenuItem>\r\n              ))}\r\n            </Menu>\r\n          </Box>\r\n        </Toolbar>\r\n      </Container>\r\n    </AppBar>\r\n  );\r\n};\r\nexport default FancyBar;\r\n","D:\\unipr\\Telematica\\Progetto\\Telematica\\frontend\\src\\components\\FancyCheckbox.jsx",[],[],"D:\\unipr\\Telematica\\Progetto\\Telematica\\frontend\\src\\components\\FancyButton.jsx",["66","67"],[],{"ruleId":"68","severity":1,"message":"69","line":33,"column":11,"nodeType":"70","messageId":"71","endLine":33,"endColumn":24},{"ruleId":"68","severity":1,"message":"72","line":41,"column":11,"nodeType":"70","messageId":"71","endLine":41,"endColumn":24},{"ruleId":"68","severity":1,"message":"73","line":8,"column":8,"nodeType":"70","messageId":"71","endLine":8,"endColumn":16},{"ruleId":"68","severity":1,"message":"74","line":10,"column":8,"nodeType":"70","messageId":"71","endLine":10,"endColumn":14},{"ruleId":"68","severity":1,"message":"75","line":24,"column":9,"nodeType":"70","messageId":"71","endLine":24,"endColumn":26},{"ruleId":"76","severity":1,"message":"77","line":49,"column":13,"nodeType":"78","endLine":49,"endColumn":56},{"ruleId":"76","severity":1,"message":"77","line":85,"column":13,"nodeType":"78","endLine":85,"endColumn":56},{"ruleId":"68","severity":1,"message":"79","line":4,"column":8,"nodeType":"70","messageId":"71","endLine":4,"endColumn":13},{"ruleId":"68","severity":1,"message":"80","line":5,"column":10,"nodeType":"70","messageId":"71","endLine":5,"endColumn":16},"no-unused-vars","'handleOnHover' is assigned a value but never used.","Identifier","unusedVar","'handleOnFocus' is assigned a value but never used.","'MenuIcon' is defined but never used.","'Avatar' is defined but never used.","'handleOpenNavMenu' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Stack' is defined but never used.","'purple' is defined but never used."]